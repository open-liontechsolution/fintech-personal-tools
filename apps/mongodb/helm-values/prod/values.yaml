# Valores para MongoDB Community Operator - Entorno de Producción

# Configuración básica del operador
operator:
  # El operador monitorea esta configuración de MongoDB
  watchNamespace: mongodb-prod

# Configuración del ResourceBundle que contendrá el operador
resourceBundle:
  enabled: true

mongodb:
  # Nombre de la instancia MongoDB
  name: mongodb
  
  # Configuración de la réplica - 3 réplicas para alta disponibilidad
  replicaCount: 3
  
  # Configuración de usuarios
  users:
    - name: admin-user
      db: admin
      passwordSecretRef:
        name: mongodb-admin-password
      roles:
        - name: root
          db: admin
  
  # Configuración de seguridad con TLS habilitado para producción
  security:
    tls:
      enabled: true
      ca: mongodb-ca-cert
      certificateKeySecretRef:
        name: mongodb-cert-key
      
  # Configuración del almacenamiento persistente
  storage:
    dataVolume:
      persistentVolumeClaim:
        storageClassName: longhorn
        resources:
          requests:
            storage: 32Gi
  
  # Configuración de recursos
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 1000m
      memory: 2Gi
  
  # Configuración del StatefulSet personalizada
  statefulSet:
    spec:
      template:
        spec:
          containers:
          - name: mongod
            resources:
              limits:
                cpu: 2000m
                memory: 4Gi
              requests:
                cpu: 1000m
                memory: 2Gi
          # Anotaciones para integración con Cilium
          annotations:
            io.cilium/proxy-visibility: '<Mongodb/TCP/27017>'
          # Configuración de afinidad para distribuir pods en nodos diferentes
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - mongodb
                topologyKey: kubernetes.io/hostname
          tolerations: []

# Configuración de métricas para Prometheus
metrics:
  enabled: true
  prometheus:
    serviceMonitor:
      enabled: true

# Configuración de copias de seguridad
backup:
  enabled: true
  cronJobTemplate:
    schedule: "0 2 * * *"
    jobTemplate:
      spec:
        template:
          spec:
            containers:
            - name: mongodb-backup
              image: bitnami/mongodb:latest
              command:
              - /bin/sh
              - -c
              - mongodump --host=mongodb-svc.mongodb-prod.svc.cluster.local --ssl --username=admin-user --password=$(MONGODB_PASSWORD) --out=/backup/$(date +%Y%m%d) --gzip
              env:
              - name: MONGODB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: mongodb-admin-password
                    key: password
              volumeMounts:
              - name: backup-volume
                mountPath: /backup
            volumes:
            - name: backup-volume
              persistentVolumeClaim:
                claimName: mongodb-backup-pvc
