apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-user-manager-scripts
  namespace: mongodb-dev
data:
  init-user.js: |
    // Este script crea o actualiza usuario en MongoDB
    // Debe ejecutarse con las variables DB_NAME, DB_USER y DB_PASS definidas como eval
    
    // Verificar que las variables existen
    if (typeof DB_NAME === "undefined" || typeof DB_USER === "undefined" || typeof DB_PASS === "undefined") {
      print("ERROR: Faltan variables requeridas. Ejecuta con --eval 'DB_NAME=\"nombre\"; DB_USER=\"usuario\"; DB_PASS=\"contraseña\"'");
      quit(1);
    }
    
    print("Trabajando con base de datos: " + DB_NAME + ", usuario: " + DB_USER);
    
    // Conectar a la base de datos y asegurar que estamos en el primario
    var rs = rs.status();
    var primaryMember = null;
    
    // Encontrar el nodo primario en el replica set
    for (var i = 0; i < rs.members.length; i++) {
      if (rs.members[i].state === 1) {  // 1 = PRIMARY
        primaryMember = rs.members[i];
        break;
      }
    }
    
    if (!primaryMember) {
      print("ERROR: No se pudo encontrar el nodo primario en el replica set");
      quit(1);
    }
    
    print("Nodo primario encontrado: " + primaryMember.name);
    
    // Conectar a la base de datos
    var db = db.getSiblingDB(DB_NAME);
    
    // Verificar si el usuario ya existe
    var userExists = null;
    try {
      userExists = db.getUser(DB_USER);
    } catch (e) {
      print("Creando nuevo usuario...");
    }
    
    if (userExists) {
      print("El usuario " + DB_USER + " ya existe en " + DB_NAME + ", actualizando contraseña...");
      db.changeUserPassword(DB_USER, DB_PASS);
      print("Contraseña actualizada");
    } else {
      print("Creando nuevo usuario " + DB_USER + " en " + DB_NAME + "...");
      db.createUser({
        user: DB_USER,
        pwd: DB_PASS,
        roles: [{ role: "readWrite", db: DB_NAME }]
      });
      print("Usuario creado exitosamente");
    }
    
    print("Configuración completada para " + DB_NAME);
  
  setup.sh: |
    #!/bin/sh
    set -e
    
    echo "Esperando a que MongoDB esté listo..."
    sleep 15
    
    echo "Extrayendo información del Secret..."
    if [ -f /secrets/database ] && [ -f /secrets/username ] && [ -f /secrets/password ]; then
      DB_NAME=$(cat /secrets/database)
      DB_USER=$(cat /secrets/username)
      DB_PASS=$(cat /secrets/password)
      
      echo "Creando usuario $DB_USER para la base de datos $DB_NAME..."
      
      # Intentar conectarse al replicaset, no solo a un nodo
      # El parámetro --host especifica el nombre del replicaset y los nodos
      mongo --host "rs0/mongodb-0.mongodb:27017,mongodb-1.mongodb:27017,mongodb-2.mongodb:27017" \
        -u $MONGO_INITDB_ROOT_USERNAME \
        -p $MONGO_INITDB_ROOT_PASSWORD \
        --authenticationDatabase admin \
        --eval "var DB_NAME=\"$DB_NAME\"; var DB_USER=\"$DB_USER\"; var DB_PASS=\"$DB_PASS\";" \
        /scripts/init-user.js
      
      echo "Proceso completado correctamente"
    else
      echo "No se encontró información completa en el Secret"
      exit 1
    fi
