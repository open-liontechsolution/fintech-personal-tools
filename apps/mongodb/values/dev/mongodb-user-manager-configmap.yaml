apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-user-manager-scripts
  namespace: mongodb-dev
data:
  init-user.js: |
    // Este script crea o actualiza usuario en MongoDB
    // Debe ejecutarse con las variables DB_NAME, DB_USER y DB_PASS definidas como eval
    
    // Verificar que las variables existen
    if (typeof DB_NAME === "undefined" || typeof DB_USER === "undefined" || typeof DB_PASS === "undefined") {
      print("ERROR: Faltan variables requeridas. Ejecuta con --eval 'DB_NAME=\"nombre\"; DB_USER=\"usuario\"; DB_PASS=\"contraseña\"'");
      quit(1);
    }
    
    print("Trabajando con base de datos: " + DB_NAME + ", usuario: " + DB_USER);
    
    // Conectar a la base de datos
    var db = db.getSiblingDB(DB_NAME);
    
    try {
      // Verificar primero si estamos en el primario
      if (!db.isMaster().ismaster) {
        print("WARNING: Este nodo no es el primario. Intentando forzar escritura con writeConcern majority.");
      }
      
      // Verificar si el usuario ya existe
      var userExists = db.getUser(DB_USER);
      
      if (userExists) {
        print("El usuario " + DB_USER + " ya existe en " + DB_NAME + ", actualizando contraseña...");
        db.changeUserPassword(DB_USER, DB_PASS);
        print("Contraseña actualizada");
      } else {
        print("Creando nuevo usuario " + DB_USER + " en " + DB_NAME + "...");
        db.createUser({
          user: DB_USER,
          pwd: DB_PASS,
          roles: [{ role: "readWrite", db: DB_NAME }]
        });
        print("Usuario creado exitosamente");
      }
      
      print("Configuración completada para " + DB_NAME);
    } catch (e) {
      print("Error durante la operación: " + e);
      if (e.message && e.message.includes("not master")) {
        print("ERROR: No pudimos escribir porque este nodo no es el primario.");
        print("Por favor, intenta conectarte directamente al primario o usa una cadena de conexión del replica set.");
        quit(1);
      }
      
      // Intento final de escritura si no es un error de "not master"
      try {
        print("Intentando creación de usuario como último recurso...");
        db.createUser({
          user: DB_USER,
          pwd: DB_PASS,
          roles: [{ role: "readWrite", db: DB_NAME }]
        });
        print("Intento de creación forzada completado");
      } catch (finalError) {
        print("Error final: " + finalError);
        quit(1);
      }
    }
  
  setup.sh: |
    #!/bin/sh
    set -e
    
    echo "Esperando a que MongoDB esté listo..."
    sleep 15
    
    echo "Extrayendo información del Secret..."
    if [ -f /secrets/database ] && [ -f /secrets/username ] && [ -f /secrets/password ]; then
      DB_NAME=$(cat /secrets/database)
      DB_USER=$(cat /secrets/username)
      DB_PASS=$(cat /secrets/password)
      
      echo "Creando usuario $DB_USER para la base de datos $DB_NAME..."
      
      # Detectar el nodo primario actual
      echo "Intentando detectar el nodo primario..."
      
      # Conectarse al replica set completo, MongoDB dirigirá la conexión al primario
      mongo --host "rs0/mongodb-0.mongodb:27017,mongodb-1.mongodb:27017,mongodb-2.mongodb:27017" \
        --eval "var primaryHost = rs.status().members.find(m => m.state === 1).name; print('PRIMARY_HOST=' + primaryHost);" \
        -u $MONGO_INITDB_ROOT_USERNAME \
        -p $MONGO_INITDB_ROOT_PASSWORD \
        --authenticationDatabase admin > /tmp/primary_detect
      
      if [ $? -ne 0 ]; then
        echo "Error al detectar el nodo primario, intentando con mongodb-0..."
        PRIMARY_HOST="mongodb-0.mongodb:27017"
      else
        PRIMARY_HOST=$(grep PRIMARY_HOST /tmp/primary_detect | cut -d'=' -f2)
        if [ -z "$PRIMARY_HOST" ]; then
          echo "No se pudo detectar el primario, intentando con mongodb-0..."
          PRIMARY_HOST="mongodb-0.mongodb:27017"
        else
          echo "Nodo primario detectado: $PRIMARY_HOST"
        fi
      fi
      
      # Ejecutar en el nodo primario detectado
      mongo --host "$PRIMARY_HOST" \
        -u $MONGO_INITDB_ROOT_USERNAME \
        -p $MONGO_INITDB_ROOT_PASSWORD \
        --authenticationDatabase admin \
        --eval "var DB_NAME=\"$DB_NAME\"; var DB_USER=\"$DB_USER\"; var DB_PASS=\"$DB_PASS\";" \
        --quiet \
        /scripts/init-user.js
      
      echo "Proceso completado correctamente"
    else
      echo "No se encontró información completa en el Secret"
      exit 1
    fi
