apiVersion: batch/v1
kind: CronJob
metadata:
  name: mongodb-user-manager
  namespace: mongodb-dev
spec:
  schedule: "*/15 * * * *"  # Ejecutar cada 15 minutos
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: mongodb-manager-sa
          containers:
          - name: user-manager
            image: mongo:4.4.18
            command:
            - /bin/sh
            - -c
            - |
              echo "Iniciando la sincronización de usuarios MongoDB..."
              sleep 10  # Esperar a que MongoDB esté estable
              
              # Obtener los secrets gestionados por MongoDB
              MANAGED_SECRETS=$(kubectl get secrets -n mongodb-dev -o jsonpath='{range .items[?(@.metadata.annotations.mongodb\.io/managed=="true")]}{.metadata.name}{"\n"}{end}')
              
              if [ -z "$MANAGED_SECRETS" ]; then
                echo "No hay secrets gestionados por MongoDB para procesar"
                exit 0
              fi
              
              for SECRET_NAME in $MANAGED_SECRETS; do
                echo "Procesando secret: $SECRET_NAME"
                
                # Extraer y decodificar datos del secret
                DB_NAME=$(kubectl get secret $SECRET_NAME -n mongodb-dev -o jsonpath='{.data.database}' | base64 --decode)
                DB_USER=$(kubectl get secret $SECRET_NAME -n mongodb-dev -o jsonpath='{.data.username}' | base64 --decode)
                DB_PASS=$(kubectl get secret $SECRET_NAME -n mongodb-dev -o jsonpath='{.data.password}' | base64 --decode)
                
                if [ -z "$DB_NAME" ] || [ -z "$DB_USER" ] || [ -z "$DB_PASS" ]; then
                  echo "Datos incompletos en el secret $SECRET_NAME, se omite"
                  continue
                fi
                
                echo "Configurando base de datos $DB_NAME con usuario $DB_USER..."
                
                # Ejecutar script con variables pasadas como eval para MongoDB
                mongo --host mongodb-0.mongodb:27017 \
                  -u $MONGO_INITDB_ROOT_USERNAME \
                  -p $MONGO_INITDB_ROOT_PASSWORD \
                  --authenticationDatabase admin \
                  --eval "var DB_NAME=\"$DB_NAME\"; var DB_USER=\"$DB_USER\"; var DB_PASS=\"$DB_PASS\";" \
                  /scripts/init-user.js
                
                echo "Procesamiento completado para $SECRET_NAME"
              done
              
              echo "Sincronización de usuarios MongoDB completada"
            env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: root-username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: root-password
            volumeMounts:
            - name: script-volume
              mountPath: /scripts
          volumes:
          - name: script-volume
            configMap:
              name: mongodb-user-manager-scripts
              defaultMode: 0755
          restartPolicy: OnFailure
